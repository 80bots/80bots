version: '3'
services:

  # Nginx proxy server
  # Image: https://hub.docker.com/_/nginx
  proxy:
    image: nginx:alpine
    container_name: 80bots-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker-compose/proxy:/etc/nginx/conf.d/
      - ./docker-compose/proxy/common_location.conf:/etc/nginx/common_location.conf
      - ./docker-compose/proxy/common_sockets.conf:/etc/nginx/common_sockets.conf
      - ./docker-compose/proxy/common.conf:/etc/nginx/common.conf
    links:
      - web
      - api
      - ws
    networks:
      - app-network

  # React Web Client
  # Image: ./docker-compose/web/Dockerfile
  web:
    container_name: 80bots-web
    build:
      context: ./docker-compose/web
    restart: unless-stopped
    environment:
      PORT: 8000
      API_URL: 'localhost:8080'
      SOCKET_URL: 'localhost:6001'
      STRIPE_PUBLIC_KEY: "{STRIPE_PUBLIC_KEY}"
      SENTRY_DSN: "{SENTRY_DSN}"
    networks:
      - app-network

  # API
  # Image: ./docker-compose/api/Dockerfile
  api:
    container_name: 80bots-api
    build:
      context: ./docker-compose/api
    command: php artisan serve --host=0.0.0.0 --port=8000
    restart: unless-stopped
    ports:
      - "8080:8000"
    links:
      - mysql
      - redis
    networks:
      - app-network

  # API
  # Image: ./docker-compose/api/Dockerfile
  worker:
    container_name: 80bots-worker
    build:
      context: ./docker-compose/api
    command: php artisan queue:work redis --tries=1
    restart: unless-stopped
    links:
      - mysql
      - redis
    networks:
      - app-network

  # Web Sockets based on Laravel Echo Server
  # Image: https://hub.docker.com/r/oanhnn/laravel-echo-server
  ws:
    image: oanhnn/laravel-echo-server
    container_name: 80bots-ws
    restart: unless-stopped
    environment:
      LARAVEL_ECHO_SERVER_DB: "{LARAVEL_ECHO_SERVER_DB}"
      REDIS_HOST: "{REDIS_HOST}"
      REDIS_PORT: "{REDIS_PORT}"
      REDIS_KEY_PREFIX: "{REDIS_KEY_PREFIX}"
      REDIS_DB_BACKEND: "{REDIS_DB_BACKEND}"
      LARAVEL_ECHO_SERVER_AUTH_HOST: "{API_URL}"
      LARAVEL_ECHO_SERVER_HOST: "0.0.0.0"
      LARAVEL_ECHO_SERVER_PORT: "8000"
      LARAVEL_ECHO_SERVER_DEBUG: "{LARAVEL_ECHO_SERVER_DEBUG}"
    volumes:
      - ./docker-compose/ws/conf.d:/app
    links:
      - redis
    networks:
      - app-network

  # Primary DB - MySQL
  # Image: https://hub.docker.com/_/mysql
  mysql:
    image: mysql:5.7
    container_name: 80bots-mysql
    restart: unless-stopped
    environment:
      - "MYSQL_DATABASE=80bots"
      - "MYSQL_ROOT_PASSWORD=root"
    ports:
      - "3306:3306"
    volumes:
      - ./docker-compose/mysql/conf.d:/etc/mysql/conf.d/
      - ./docker-compose/mysql/data:/var/lib/mysql
    networks:
      - app-network

  # Redis
  # Image: https://hub.docker.com/_/redis/
  redis:
    build:
      context: ./docker-compose/redis
    container_name: 80bots-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./docker-compose/redis/data:/data
    networks:
      - app-network
networks:
  app-network:
    driver: bridge